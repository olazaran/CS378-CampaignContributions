Put the following into .bash_profile
export JAVA_HOME=`/usr/libexec/java_home`
. ./.bash_profile
Download ojdbc6.jar into ~/Downloads
sudo mv ~/Downloads/ojdbc6.jar $JAVA_HOME
"
# In the following, use your path instead of /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home
# For Windows, your Java Home folder should be similar to: C:/Program Files/Java/jdk1.8.0_20
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jdk1.8.0_20')
options(java.parameters="-Xmx4g")
library(rJava)
# Load RJDBC library
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# The following data.frame will be used as the default if emps can't be loaded from Oracle.
proc1 <- 1
proc2 <- 'Broken Shoulder'
procedureT <- data.frame(proc1,proc2)
col_headings <- c('PROCEDURE_ID', 'PROCEDURE_NAME')
names(procedureT) <- col_headings
possibleError <- tryCatch(
# In the following, use your username and password instead of "CS347_prof", "orcl_prof"
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
ppsT <- dbGetQuery(jdbcConnection, "select provider_state as state, count(provider_id) as num
from provider
GROUP BY provider_state;")
dbDisconnect(jdbcConnection)
}
#provider per state table
possibleError <- tryCatch(
# In the following, use your username and password instead of "CS347_prof", "orcl_prof"
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
ppsT <- dbGetQuery(jdbcConnection, "select provider_state as state, count(provider_id) as num
from provider
GROUP BY provider_state")
dbDisconnect(jdbcConnection)
}
recordT
providerT
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
library("DBI", lib.loc="~/R/win-library/3.0")
library("gdata", lib.loc="~/R/win-library/3.0")
library("ggplot2", lib.loc="~/R/win-library/3.0")
library("gplots", lib.loc="~/R/win-library/3.0")
library("plyr", lib.loc="~/R/win-library/3.0")
library("rJava", lib.loc="~/R/win-library/3.0")
library("RJDBC", lib.loc="~/R/win-library/3.0")
library("shiny", lib.loc="~/R/win-library/3.0")
"
Put the following into .bash_profile
export JAVA_HOME=`/usr/libexec/java_home`
. ./.bash_profile
Download ojdbc6.jar into ~/Downloads
sudo mv ~/Downloads/ojdbc6.jar $JAVA_HOME
"
# In the following, use your path instead of /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home
# For Windows, your Java Home folder should be similar to: C:/Program Files/Java/jdk1.8.0_20
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jdk1.8.0_20')
options(java.parameters="-Xmx4g")
library(rJava)
# Output Java version
.jinit()
print(.jcall("java/lang/System", "S", "getProperty", "java.version"))
# Load RJDBC library
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# The following data.frame will be used as the default if emps can't be loaded from Oracle.
proc1 <- 1
proc2 <- 'Broken Shoulder'
procedureT <- data.frame(proc1,proc2)
col_headings <- c('PROCEDURE_ID', 'PROCEDURE_NAME')
names(procedureT) <- col_headings
possibleError <- tryCatch(
# In the following, use your username and password instead of "CS347_prof", "orcl_prof"
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
ppsT <- dbGetQuery(jdbcConnection, "select provider_state as state, count(provider_id) as num
from provider
GROUP BY provider_state;")
dbDisconnect(jdbcConnection)
}
#provider per state table
possibleError <- tryCatch(
# In the following, use your username and password instead of "CS347_prof", "orcl_prof"
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
ppsT <- dbGetQuery(jdbcConnection, "select provider_state as state, count(provider_id) as num
from provider
GROUP BY provider_state")
dbDisconnect(jdbcConnection)
}
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
runExample("08_html")
runExample("08_html", display.mode = "showcase")
runExample("01_hello", display.mode = "showcase")
runExample("01_hello")
runExample("02_text")
runExample("03_reactivity")
runExample("01_hello")
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
runExample("02_text")
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
runExample("02_text")
runExample("03_reactivity")
runExample("01_hello")
runExample("02_text")
shiny::runApp('04Shiny')
runExample("02_text")
runExample("02_text")
runExample("01_hello")
runExample("02_text")
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT")
# server.R
library(shiny)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT")
}
# server.R
library(shiny)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT")
}
.jinit()
q
library(shiny)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT")
}
# server.R
library(shiny)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT")
}
# server.R
library(shiny)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT")
}
# server.R
library(shiny)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT")
}
runExample("02_text")
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
# server.R
library(shiny)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
# server.R
library(shiny)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
library("DBI", lib.loc="~/R/win-library/3.0")
library("gplots", lib.loc="~/R/win-library/3.0")
library("gdata", lib.loc="~/R/win-library/3.0")
library("knitr", lib.loc="~/R/win-library/3.0")
library("markdown", lib.loc="~/R/win-library/3.0")
library("rJava", lib.loc="~/R/win-library/3.0")
library("RJDBC", lib.loc="~/R/win-library/3.0")
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
runExample("02_text")
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT")
}
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT")
dbDisconnect(jdbcConnection)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286")
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT")
}
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286")
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shinyExample("01_hello")
runExample("03_reactivity")
"
"
Put the following into .bash_profile
export JAVA_HOME=`/usr/libexec/java_home`
. ./.bash_profile
Download ojdbc6.jar into ~/Downloads
sudo mv ~/Downloads/ojdbc6.jar $JAVA_HOME
"
# In the following, use your path instead of /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home
# For Windows, your Java Home folder should be similar to: C:/Program Files/Java/jdk1.8.0_20
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jdk1.8.0_20')
options(java.parameters="-Xmx4g")
library(rJava)
# Output Java version
.jinit()
print(.jcall("java/lang/System", "S", "getProperty", "java.version"))
# Load RJDBC library
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# The following data.frame will be used as the default if emps can't be loaded from Oracle.
proc1 <- 1
proc2 <- 'Broken Shoulder'
procedureT <- data.frame(proc1,proc2)
col_headings <- c('PROCEDURE_ID', 'PROCEDURE_NAME')
names(procedureT) <- col_headings
possibleError <- tryCatch(
# In the following, use your username and password instead of "CS347_prof", "orcl_prof"
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
ppsT <- dbGetQuery(jdbcConnection, "select provider_state as state, count(provider_id) as num
from provider
GROUP BY provider_state;")
dbDisconnect(jdbcConnection)
}
#provider per state table
possibleError <- tryCatch(
# In the following, use your username and password instead of "CS347_prof", "orcl_prof"
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
ppsT <- dbGetQuery(jdbcConnection, "select provider_state as state, count(provider_id) as num
from provider
GROUP BY provider_state")
dbDisconnect(jdbcConnection)
}
"
Put the following into .bash_profile
export JAVA_HOME=`/usr/libexec/java_home`
. ./.bash_profile
Download ojdbc6.jar into ~/Downloads
sudo mv ~/Downloads/ojdbc6.jar $JAVA_HOME
"
# In the following, use your path instead of /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home
# For Windows, your Java Home folder should be similar to: C:/Program Files/Java/jdk1.8.0_20
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jdk1.8.0_20')
options(java.parameters="-Xmx4g")
library(rJava)
# Output Java version
.jinit()
print(.jcall("java/lang/System", "S", "getProperty", "java.version"))
# Load RJDBC library
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# The following data.frame will be used as the default if emps can't be loaded from Oracle.
proc1 <- 1
proc2 <- 'Broken Shoulder'
procedureT <- data.frame(proc1,proc2)
col_headings <- c('PROCEDURE_ID', 'PROCEDURE_NAME')
names(procedureT) <- col_headings
possibleError <- tryCatch(
# In the following, use your username and password instead of "CS347_prof", "orcl_prof"
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
providerT <- dbGetQuery(jdbcConnection, "select * from provider")
recordT <- dbGetQuery(jdbcConnection, "select * from records")
ppsT <- dbGetQuery(jdbcConnection, "select provider_state as state, count(provider_id) as num
from provider
GROUP BY provider_state;")
dbDisconnect(jdbcConnection)
}
#provider per state table
possibleError <- tryCatch(
# In the following, use your username and password instead of "CS347_prof", "orcl_prof"
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
ppsT <- dbGetQuery(jdbcConnection, "select provider_state as state, count(provider_id) as num
from provider
GROUP BY provider_state")
dbDisconnect(jdbcConnection)
}
runExample("03_reactivity")
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
#procedureT <- dbGetQuery(jdbcConnection, "select * from procedures")
#providerT <- dbGetQuery(jdbcConnection, "select * from provider")
#recordT <- dbGetQuery(jdbcConnection, "select * from records")
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT")
dbDisconnect(jdbcConnection)
}
shiny::runApp('04Shiny')
subset(shinyT,provider_state == "AL")
shinyT
subset(shinyT,provider_state = "AL")
subset(shinyT,PROVIDER_STATE = "AL")
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
subset(shinyT,PROVIDER_STATE == "AL")
shiny::runApp('04Shiny')
"AL"
al
AL
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
runExample("01_hello")
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
faithful
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
head(shinyT)
shinyT
subset(shinyT,PROVIDER_STATE == "AL")
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT2")
dbDisconnect(jdbcConnection)
}
output$summary <- renderPrint({
dataset <- shinyT
summary(dataset)
})
shinyServer(function(input, output) {
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_fao286", "orcl_fao286"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
shinyT <- dbGetQuery(jdbcConnection, "select * from shinyT2")
dbDisconnect(jdbcConnection)
}
output$summary <- renderPrint({
dataset <- shinyT
summary(dataset)
})
output$view <- renderTable({
head(shinyT, n = input$obs)
})
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
quit
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
class(shinyT)
as.numeric(shinyT[0])
shiny::runApp('04Shiny')
